from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class CardDetailsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cid=None, is_trumpf=None, value=None, worth=None):  # noqa: E501
        """CardDetailsResponse - a model defined in OpenAPI

        :param cid: The cid of this CardDetailsResponse.  # noqa: E501
        :type cid: str
        :param is_trumpf: The is_trumpf of this CardDetailsResponse.  # noqa: E501
        :type is_trumpf: bool
        :param value: The value of this CardDetailsResponse.  # noqa: E501
        :type value: int
        :param worth: The worth of this CardDetailsResponse.  # noqa: E501
        :type worth: int
        """
        self.openapi_types = {
            'cid': str,
            'is_trumpf': bool,
            'value': int,
            'worth': int
        }

        self.attribute_map = {
            'cid': 'cid',
            'is_trumpf': 'isTrumpf',
            'value': 'value',
            'worth': 'worth'
        }

        self._cid = cid
        self._is_trumpf = is_trumpf
        self._value = value
        self._worth = worth

    @classmethod
    def from_dict(cls, dikt) -> 'CardDetailsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CardDetailsResponse of this CardDetailsResponse.  # noqa: E501
        :rtype: CardDetailsResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cid(self) -> str:
        """Gets the cid of this CardDetailsResponse.


        :return: The cid of this CardDetailsResponse.
        :rtype: str
        """
        return self._cid

    @cid.setter
    def cid(self, cid: str):
        """Sets the cid of this CardDetailsResponse.


        :param cid: The cid of this CardDetailsResponse.
        :type cid: str
        """

        self._cid = cid

    @property
    def is_trumpf(self) -> bool:
        """Gets the is_trumpf of this CardDetailsResponse.


        :return: The is_trumpf of this CardDetailsResponse.
        :rtype: bool
        """
        return self._is_trumpf

    @is_trumpf.setter
    def is_trumpf(self, is_trumpf: bool):
        """Sets the is_trumpf of this CardDetailsResponse.


        :param is_trumpf: The is_trumpf of this CardDetailsResponse.
        :type is_trumpf: bool
        """

        self._is_trumpf = is_trumpf

    @property
    def value(self) -> int:
        """Gets the value of this CardDetailsResponse.


        :return: The value of this CardDetailsResponse.
        :rtype: int
        """
        return self._value

    @value.setter
    def value(self, value: int):
        """Sets the value of this CardDetailsResponse.


        :param value: The value of this CardDetailsResponse.
        :type value: int
        """

        self._value = value

    @property
    def worth(self) -> int:
        """Gets the worth of this CardDetailsResponse.


        :return: The worth of this CardDetailsResponse.
        :rtype: int
        """
        return self._worth

    @worth.setter
    def worth(self, worth: int):
        """Sets the worth of this CardDetailsResponse.


        :param worth: The worth of this CardDetailsResponse.
        :type worth: int
        """

        self._worth = worth
