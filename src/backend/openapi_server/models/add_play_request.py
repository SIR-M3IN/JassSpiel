from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class AddPlayRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, uid=None, cid=None):  # noqa: E501
        """AddPlayRequest - a model defined in OpenAPI

        :param uid: The uid of this AddPlayRequest.  # noqa: E501
        :type uid: str
        :param cid: The cid of this AddPlayRequest.  # noqa: E501
        :type cid: str
        """
        self.openapi_types = {
            'uid': str,
            'cid': str
        }

        self.attribute_map = {
            'uid': 'uid',
            'cid': 'cid'
        }

        self._uid = uid
        self._cid = cid

    @classmethod
    def from_dict(cls, dikt) -> 'AddPlayRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AddPlayRequest of this AddPlayRequest.  # noqa: E501
        :rtype: AddPlayRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uid(self) -> str:
        """Gets the uid of this AddPlayRequest.

        UID des Spielers, der die Karte spielt.  # noqa: E501

        :return: The uid of this AddPlayRequest.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid: str):
        """Sets the uid of this AddPlayRequest.

        UID des Spielers, der die Karte spielt.  # noqa: E501

        :param uid: The uid of this AddPlayRequest.
        :type uid: str
        """
        if uid is None:
            raise ValueError("Invalid value for `uid`, must not be `None`")  # noqa: E501

        self._uid = uid

    @property
    def cid(self) -> str:
        """Gets the cid of this AddPlayRequest.

        CID der gespielten Karte.  # noqa: E501

        :return: The cid of this AddPlayRequest.
        :rtype: str
        """
        return self._cid

    @cid.setter
    def cid(self, cid: str):
        """Sets the cid of this AddPlayRequest.

        CID der gespielten Karte.  # noqa: E501

        :param cid: The cid of this AddPlayRequest.
        :type cid: str
        """
        if cid is None:
            raise ValueError("Invalid value for `cid`, must not be `None`")  # noqa: E501

        self._cid = cid
