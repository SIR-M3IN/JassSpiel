from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class GamesGidUpdateScoresPost200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, total_points=None):  # noqa: E501
        """GamesGidUpdateScoresPost200Response - a model defined in OpenAPI

        :param total_points: The total_points of this GamesGidUpdateScoresPost200Response.  # noqa: E501
        :type total_points: int
        """
        self.openapi_types = {
            'total_points': int
        }

        self.attribute_map = {
            'total_points': 'totalPoints'
        }

        self._total_points = total_points

    @classmethod
    def from_dict(cls, dikt) -> 'GamesGidUpdateScoresPost200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The games_gid_update_scores_post_200_response of this GamesGidUpdateScoresPost200Response.  # noqa: E501
        :rtype: GamesGidUpdateScoresPost200Response
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total_points(self) -> int:
        """Gets the total_points of this GamesGidUpdateScoresPost200Response.


        :return: The total_points of this GamesGidUpdateScoresPost200Response.
        :rtype: int
        """
        return self._total_points

    @total_points.setter
    def total_points(self, total_points: int):
        """Sets the total_points of this GamesGidUpdateScoresPost200Response.


        :param total_points: The total_points of this GamesGidUpdateScoresPost200Response.
        :type total_points: int
        """

        self._total_points = total_points
