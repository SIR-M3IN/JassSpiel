from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class CardInGame(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cid=None, uid=None, gid=None, is_trumpf=None, cigid=None):  # noqa: E501
        """CardInGame - a model defined in OpenAPI

        :param cid: The cid of this CardInGame.  # noqa: E501
        :type cid: str
        :param uid: The uid of this CardInGame.  # noqa: E501
        :type uid: str
        :param gid: The gid of this CardInGame.  # noqa: E501
        :type gid: str
        :param is_trumpf: The is_trumpf of this CardInGame.  # noqa: E501
        :type is_trumpf: bool
        :param cigid: The cigid of this CardInGame.  # noqa: E501
        :type cigid: str
        """
        self.openapi_types = {
            'cid': str,
            'uid': str,
            'gid': str,
            'is_trumpf': bool,
            'cigid': str
        }

        self.attribute_map = {
            'cid': 'CID',
            'uid': 'UID',
            'gid': 'GID',
            'is_trumpf': 'isTrumpf',
            'cigid': 'CIGID'
        }

        self._cid = cid
        self._uid = uid
        self._gid = gid
        self._is_trumpf = is_trumpf
        self._cigid = cigid

    @classmethod
    def from_dict(cls, dikt) -> 'CardInGame':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CardInGame of this CardInGame.  # noqa: E501
        :rtype: CardInGame
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cid(self) -> str:
        """Gets the cid of this CardInGame.


        :return: The cid of this CardInGame.
        :rtype: str
        """
        return self._cid

    @cid.setter
    def cid(self, cid: str):
        """Sets the cid of this CardInGame.


        :param cid: The cid of this CardInGame.
        :type cid: str
        """
        if cid is None:
            raise ValueError("Invalid value for `cid`, must not be `None`")  # noqa: E501

        self._cid = cid

    @property
    def uid(self) -> str:
        """Gets the uid of this CardInGame.


        :return: The uid of this CardInGame.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid: str):
        """Sets the uid of this CardInGame.


        :param uid: The uid of this CardInGame.
        :type uid: str
        """
        if uid is None:
            raise ValueError("Invalid value for `uid`, must not be `None`")  # noqa: E501

        self._uid = uid

    @property
    def gid(self) -> str:
        """Gets the gid of this CardInGame.


        :return: The gid of this CardInGame.
        :rtype: str
        """
        return self._gid

    @gid.setter
    def gid(self, gid: str):
        """Sets the gid of this CardInGame.


        :param gid: The gid of this CardInGame.
        :type gid: str
        """
        if gid is None:
            raise ValueError("Invalid value for `gid`, must not be `None`")  # noqa: E501

        self._gid = gid

    @property
    def is_trumpf(self) -> bool:
        """Gets the is_trumpf of this CardInGame.


        :return: The is_trumpf of this CardInGame.
        :rtype: bool
        """
        return self._is_trumpf

    @is_trumpf.setter
    def is_trumpf(self, is_trumpf: bool):
        """Sets the is_trumpf of this CardInGame.


        :param is_trumpf: The is_trumpf of this CardInGame.
        :type is_trumpf: bool
        """

        self._is_trumpf = is_trumpf

    @property
    def cigid(self) -> str:
        """Gets the cigid of this CardInGame.


        :return: The cigid of this CardInGame.
        :rtype: str
        """
        return self._cigid

    @cigid.setter
    def cigid(self, cigid: str):
        """Sets the cigid of this CardInGame.


        :param cigid: The cigid of this CardInGame.
        :type cigid: str
        """

        self._cigid = cigid
